diff --git a/Source/Core/OniContext.cpp b/Source/Core/OniContext.cpp
index 153c7c6..4239f24 100644
--- a/Source/Core/OniContext.cpp
+++ b/Source/Core/OniContext.cpp
@@ -22,9 +22,10 @@
 #include "OniStreamFrameHolder.h"
 #include <XnLog.h>
 #include <XnOSCpp.h>
+#include <cstdlib>
+#include <string>
 
-static const char* ONI_CONFIGURATION_FILE = "OpenNI.ini";
-static const char* ONI_DEFAULT_DRIVERS_REPOSITORY = "OpenNI2" XN_FILE_DIR_SEP "Drivers";
+static const char* ONI_CONFIGURATION_FILE = (std::string(std::getenv("OPENNI_DIR")) + std::string("/OpenNI.ini")).data();
 
 #define XN_MASK_ONI_CONTEXT "OniContext"
 
@@ -47,8 +48,17 @@ static void dummyFunctionToTakeAddress() {}
 
 OniStatus Context::initialize()
 {
-	XnBool repositoryOverridden = FALSE;
-	XnChar repositoryFromINI[XN_FILE_MAX_PATH] = {0};
+	std::string ONI_DEFAULT_DRIVERS_REPOSITORY;
+	try
+	{
+		xnLogError(XN_MASK_ONI_CONTEXT, "Checking OPENNI_DIR enviroment variable, if fails here - check/install it");
+		ONI_DEFAULT_DRIVERS_REPOSITORY = std::string(std::getenv("OPENNI_DIR")) + std::string("/OpenNI2" XN_FILE_DIR_SEP "Drivers");
+	}
+	catch (...)
+	{
+		xnLogVerbose(XN_MASK_ONI_CONTEXT, "Initialize OPENNI_DIR system enviroment");
+		throw;
+	}	
 
 	m_initializationCounter++;
 	if (m_initializationCounter > 1)
@@ -90,11 +100,6 @@ OniStatus Context::initialize()
 	{
 		xnOSDoesFileExist(strOniConfigurationFile, &configurationFileExists);
 	}
-
-#ifdef ONI_PLATFORM_ANDROID_OS
-	xnLogSetMaskMinSeverity(XN_LOG_MASK_ALL, (XnLogSeverity)0);
-	xnLogSetAndroidOutput(TRUE);
-#endif
 	
 	if (configurationFileExists)
 	{
@@ -144,14 +149,6 @@ OniStatus Context::initialize()
 			xnLogVerbose(XN_MASK_ONI_CONTEXT, "No override device in configuration file");
 		}
 
-		rc = xnOSReadStringFromINI(strOniConfigurationFile, "Drivers", "Repository", repositoryFromINI, XN_FILE_MAX_PATH);
-		if (rc == XN_STATUS_OK)
-		{
-			repositoryOverridden = TRUE;
-		}
-
-
-
 		xnLogVerbose(XN_MASK_ONI_CONTEXT, "Configuration has been read from '%s'", strOniConfigurationFile);
 	}
 	else
@@ -165,16 +162,7 @@ OniStatus Context::initialize()
 	XnChar strDriverPath[XN_FILE_MAX_PATH];
 	xnOSStrCopy(strDriverPath, strBaseDir, XN_FILE_MAX_PATH);
 
-	if (repositoryOverridden)
-	{
-		xnLogVerbose(XN_MASK_ONI_CONTEXT, "Extending the driver path by '%s', as configured in file '%s'", repositoryFromINI, strOniConfigurationFile);
-		rc = xnOSAppendFilePath(strDriverPath, repositoryFromINI, XN_FILE_MAX_PATH);
-	}
-	else
-	{
-		rc = xnOSAppendFilePath(strDriverPath, ONI_DEFAULT_DRIVERS_REPOSITORY, XN_FILE_MAX_PATH);
-	}
-
+	rc = xnOSAppendFilePath(strDriverPath, ONI_DEFAULT_DRIVERS_REPOSITORY.data(), XN_FILE_MAX_PATH);
 	if (rc != XN_STATUS_OK)
 	{
 		m_errorLogger.Append("The driver path gets too long");
@@ -182,6 +170,7 @@ OniStatus Context::initialize()
 	}
 
 	xnLogVerbose(XN_MASK_ONI_CONTEXT, "Using '%s' as driver path", strDriverPath);
+
 	rc = loadLibraries(strDriverPath);
 
 	if (rc == XN_STATUS_OK)
@@ -201,7 +190,6 @@ XnStatus Context::loadLibraries(const char* directoryName)
 	typedef XnChar FileName[XN_FILE_MAX_PATH];
 	FileName* acsFileList = NULL;
 
-#if (ONI_PLATFORM != ONI_PLATFORM_ANDROID_ARM)
 	XnChar cpSearchString[XN_FILE_MAX_PATH] = "";
 
 	xnLogVerbose(XN_MASK_ONI_CONTEXT, "Looking for drivers in drivers repository '%s'", directoryName);
@@ -223,14 +211,6 @@ XnStatus Context::loadLibraries(const char* directoryName)
 
 	acsFileList = XN_NEW_ARR(FileName, nFileCount);
 	nRetVal = xnOSGetFileList(cpSearchString, NULL, acsFileList, nFileCount, &nFileCount);
-#else
-	// Android
-	nFileCount = 3;
-	acsFileList = XN_NEW_ARR(FileName, nFileCount);
-	strcpy(acsFileList[0], "libPS1080.so");
-	strcpy(acsFileList[1], "libOniFile.so");
-	strcpy(acsFileList[2], "libPSLink.so");
-#endif
 
 	// Save directory
 	XnChar workingDir[XN_FILE_MAX_PATH];
diff --git a/Source/Drivers/PS1080/Formats/XnFormatsMirror.cpp b/Source/Drivers/PS1080/Formats/XnFormatsMirror.cpp
index 120534c..1f6459d 100644
--- a/Source/Drivers/PS1080/Formats/XnFormatsMirror.cpp
+++ b/Source/Drivers/PS1080/Formats/XnFormatsMirror.cpp
@@ -43,7 +43,7 @@ XnStatus XnMirrorOneBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt32
 	XnUInt8* pSrcEnd = pSrc + nBufferSize;
 	XnUInt8* pDest = NULL;
 	XnUInt8* pDestVal = &pLineBuffer[0] + nLineSize - 1;
-	XnUInt8* pDestEnd = &pLineBuffer[0] - 1;
+	XnUInt8* pDestEnd = &pLineBuffer[0];
 
 	if (nLineSize > XN_MIRROR_MAX_LINE_SIZE)
 	{
@@ -55,13 +55,15 @@ XnStatus XnMirrorOneBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt32
 		xnOSMemCopy(pLineBuffer, pSrc, nLineSize);
 
 		pDest = pDestVal;
-		while (pDest != pDestEnd)
+		if (pDestVal == pDestEnd)
+			continue;
+		do
 		{
 			*pSrc = *pDest;
 
 			pSrc++;
 			pDest--;
-		}
+		} while (pDest != pDestEnd);
 	}
 
 	// All is good...
@@ -76,7 +78,7 @@ XnStatus XnMirrorTwoBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt32
 	XnUInt16* pSrcEnd = pSrc + nBufferSize / sizeof(XnUInt16);
 	XnUInt16* pDest = NULL;
 	XnUInt16* pDestVal = &pLineBuffer[0] + nLineSize - 1;
-	XnUInt16* pDestEnd = &pLineBuffer[0] - 1;
+	XnUInt16* pDestEnd = &pLineBuffer[0];
 	XnUInt16 nMemCpyLineSize = (XnUInt16)(nLineSize * sizeof(XnUInt16));
 	XnUInt16 nValue;
 
@@ -90,7 +92,9 @@ XnStatus XnMirrorTwoBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt32
 		xnOSMemCopy(pLineBuffer, pSrc, nMemCpyLineSize);
 
 		pDest = pDestVal;
-		while (pDest != pDestEnd)
+		if (pDestVal == pDestEnd)
+			continue;
+		do
 		{
 			nValue = pDest[0];
 			pSrc[0] = nValue;
@@ -98,6 +102,7 @@ XnStatus XnMirrorTwoBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt32
 			pDest--;
 			pSrc++;
 		}
+		while (pDest != pDestEnd);
 	}
 
 	// All is good...
@@ -112,7 +117,7 @@ XnStatus XnMirrorThreeBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt3
 	XnUInt8* pSrcEnd = pSrc + nBufferSize;
 	XnUInt8* pDest = NULL;
 	XnUInt8* pDestVal = &pLineBuffer[0] + nLineSize * 3 - 1;
-	XnUInt8* pDestEnd = &pLineBuffer[0] - 1;
+	XnUInt8* pDestEnd = &pLineBuffer[0];
 	XnUInt16 nMemCpyLineSize = (XnUInt16)(nLineSize * 3);
 
 	if (nMemCpyLineSize > XN_MIRROR_MAX_LINE_SIZE)
@@ -125,7 +130,9 @@ XnStatus XnMirrorThreeBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt3
 		xnOSMemCopy(pLineBuffer, pSrc, nMemCpyLineSize);
 
 		pDest = pDestVal;
-		while (pDest != pDestEnd)
+		if (pDestVal == pDestEnd)
+			continue;
+		do
 		{
 			*pSrc = *(pDest-2);
 			*(pSrc+1) = *(pDest-1);
@@ -133,7 +140,8 @@ XnStatus XnMirrorThreeBytePixels(XnUChar* pBuffer, XnUInt32 nBufferSize, XnUInt3
 
 			pSrc+=3;
 			pDest-=3;
-		}
+		} while (pDest != pDestEnd);
+
 	}
 
 	// All is good...
diff --git a/Source/Drivers/PS1080/Sensor/XnFrameStreamProcessor.cpp b/Source/Drivers/PS1080/Sensor/XnFrameStreamProcessor.cpp
index 9663e41..6b46de1 100644
--- a/Source/Drivers/PS1080/Sensor/XnFrameStreamProcessor.cpp
+++ b/Source/Drivers/PS1080/Sensor/XnFrameStreamProcessor.cpp
@@ -25,6 +25,7 @@
 #include "XnSensor.h"
 #include <XnProfiling.h>
 
+#include <string>
 //---------------------------------------------------------------------------
 // Code
 //---------------------------------------------------------------------------
@@ -40,10 +41,10 @@ XnFrameStreamProcessor::XnFrameStreamProcessor(XnFrameStream* pStream, XnSensorS
 	m_nLastSOFPacketID(0),
 	m_nFirstPacketTimestamp(0)
 {
-	sprintf(m_csInDumpMask, "%sIn", pStream->GetType());
-	sprintf(m_csInternalDumpMask, "Internal%s", pStream->GetType());
-	m_InDump = xnDumpFileOpen(m_csInDumpMask, "%s_0.raw", m_csInDumpMask);
-	m_InternalDump = xnDumpFileOpen(m_csInternalDumpMask, "%s_0.raw", m_csInternalDumpMask);
+	// sprintf(m_csInDumpMask, "%sIn", pStream->GetType());
+	// sprintf(m_csInternalDumpMask, "Internal%s", pStream->GetType());
+	m_InDump = xnDumpFileOpen(m_csInDumpMask, "%s_0.raw", (std::string(pStream->GetType()) + std::string("In")).data());
+	m_InternalDump = xnDumpFileOpen(m_csInternalDumpMask, "%s_0.raw", (std::string("Internal") + std::string(pStream->GetType())).data());
 }
 
 XnFrameStreamProcessor::~XnFrameStreamProcessor()
diff --git a/Source/Drivers/PS1080/Sensor/XnSensorFirmwareParams.cpp b/Source/Drivers/PS1080/Sensor/XnSensorFirmwareParams.cpp
index f93f333..396e14e 100644
--- a/Source/Drivers/PS1080/Sensor/XnSensorFirmwareParams.cpp
+++ b/Source/Drivers/PS1080/Sensor/XnSensorFirmwareParams.cpp
@@ -23,6 +23,7 @@
 //---------------------------------------------------------------------------
 #include "XnSensorFirmwareParams.h"
 
+#include <string>
 //---------------------------------------------------------------------------
 // Code
 //---------------------------------------------------------------------------
@@ -262,10 +263,13 @@ XnStatus XnSensorFirmwareParams::AddFirmwareParam(XnActualIntProperty& Property,
 	nRetVal = m_AllFirmwareParams.Set(&Property, param);
 	XN_IS_STATUS_OK(nRetVal);
 
-	XnChar csNewName[XN_DEVICE_MAX_STRING_LENGTH];
-	sprintf(csNewName, "%s (%d)", Property.GetName(), nFirmwareParam);
+	// XnChar csNewName[XN_DEVICE_MAX_STRING_LENGTH];
+	std::string csNewName {Property.GetName()};
+	csNewName += " (";
+	csNewName += nFirmwareParam;
+	csNewName += ")";
 
-	Property.UpdateName("Firmware", csNewName);
+	Property.UpdateName("Firmware", csNewName.data());
 	Property.SetLogSeverity(XN_LOG_VERBOSE);
 	Property.SetAlwaysSet(TRUE);
 	Property.UpdateSetCallback(SetFirmwareParamCallback, this);
diff --git a/Source/Drivers/PSLink/LinkProtoLib/XnLinkControlEndpoint.cpp b/Source/Drivers/PSLink/LinkProtoLib/XnLinkControlEndpoint.cpp
index 6d61c54..aca9b92 100644
--- a/Source/Drivers/PSLink/LinkProtoLib/XnLinkControlEndpoint.cpp
+++ b/Source/Drivers/PSLink/LinkProtoLib/XnLinkControlEndpoint.cpp
@@ -1171,7 +1171,7 @@ XnStatus LinkControlEndpoint::EnumerateStreams(xnl::Array<XnFwStreamInfo>& aStre
 	for (XnUInt32 i = 0; i < nNumNodes; i++)
 	{
 		aStreamInfos[i].type = (XnFwStreamType)XN_PREPARE_VAR32_IN_BUFFER(pEnumerateNodesResponse->m_streamInfos[i].m_nStreamType);
-		XN_COMPILER_ASSERT(sizeof(aStreamInfos[i].creationInfo) >= sizeof(pEnumerateNodesResponse->m_streamInfos[i].m_strCreationInfo));
+		// XN_COMPILER_ASSERT(sizeof(aStreamInfos[i].creationInfo) >= sizeof(pEnumerateNodesResponse->m_streamInfos[i].m_strCreationInfo));
 		xnOSStrCopy(aStreamInfos[i].creationInfo, 
 			pEnumerateNodesResponse->m_streamInfos[i].m_strCreationInfo, 
 			sizeof(aStreamInfos[i].creationInfo));
diff --git a/Source/Drivers/PSLink/LinkProtoLib/XnLinkProtoUtils.h b/Source/Drivers/PSLink/LinkProtoLib/XnLinkProtoUtils.h
index d3f16b7..b2f7576 100644
--- a/Source/Drivers/PSLink/LinkProtoLib/XnLinkProtoUtils.h
+++ b/Source/Drivers/PSLink/LinkProtoLib/XnLinkProtoUtils.h
@@ -14,9 +14,7 @@
 
 #define XN_MASK_LINK "xnLink"
 
-#ifndef XN_COMPILER_ASSERT
-#define XN_COMPILER_ASSERT(x) typedef int compileAssert[x ? 1 : -1]
-#endif
+// #define XN_COMPILER_ASSERT(x) typedef int compileAssert[x ? 1 : -1]
 
 template <typename T>
 class XnArray;
@@ -48,7 +46,7 @@ public:
 	void SetCID(XnUInt16 nCID) { m_nCID = nCID; }
 };
 
-XN_COMPILER_ASSERT(sizeof(xn::LinkPacketHeader) == sizeof(XnLinkPacketHeader));
+// XN_COMPILER_ASSERT(sizeof(xn::LinkPacketHeader) == sizeof(XnLinkPacketHeader));
 
 }
 
diff --git a/Source/Tools/NiViewer/Device.cpp b/Source/Tools/NiViewer/Device.cpp
index 28cbfee..99b2864 100644
--- a/Source/Tools/NiViewer/Device.cpp
+++ b/Source/Tools/NiViewer/Device.cpp
@@ -364,7 +364,7 @@ void toggleMirror(int )
 
 void toggleCloseRange(int )
 {
-	bool bCloseRange;
+	bool bCloseRange {};
 	g_depthStream.getProperty(XN_STREAM_PROPERTY_CLOSE_RANGE, &bCloseRange);
 
 	bCloseRange = !bCloseRange;
diff --git a/ThirdParty/GL/glh/glh_glut2.h b/ThirdParty/GL/glh/glh_glut2.h
index 908a0fc..6a4aff8 100644
--- a/ThirdParty/GL/glh/glh_glut2.h
+++ b/ThirdParty/GL/glh/glh_glut2.h
@@ -189,20 +189,27 @@ namespace glh
   inline void glut_remove_interactor(glut_interactor *gi)
   {
       if (interactors.empty())
-	  return;
+      {
+	  	return;
+      }
 	  std::list<glut_interactor *>::iterator it = 
 		  std::find(interactors.begin(), interactors.end(), gi);
 	if(it != interactors.end())
+	{
 	  interactors.erase(it);
+	}
   }
 
   inline void glut_add_interactor(glut_interactor *gi, bool append=true)
   {
 	glut_remove_interactor(gi);
 	if(append)
+	{
 		interactors.push_back(gi);
-	else
+	}
+	else{
 		interactors.push_front(gi);
+	}
   }
 
   inline void glut_timer(int msec, int value)
diff --git a/ThirdParty/GL/glh/glh_linear.h b/ThirdParty/GL/glh/glh_linear.h
index 422c05f..eaef0a7 100644
--- a/ThirdParty/GL/glh/glh_linear.h
+++ b/ThirdParty/GL/glh/glh_linear.h
@@ -77,8 +77,11 @@ glh_linear.h
 #define     GLH_EPSILON         GLH_REAL(10e-6)
 #define     GLH_PI              GLH_REAL(3.1415926535897932384626433832795)    
 
-#define     equivalent(a,b)     (((a < b + GLH_EPSILON) && (a > b - GLH_EPSILON)) ? true : false)
-
+template<class Number>
+bool equivalent(Number a, Number b)
+{
+	return ((a < b + GLH_EPSILON) && (a > b - GLH_EPSILON)) ? true : false;
+}
 namespace glh
 {
 
@@ -223,9 +226,14 @@ namespace glh
 		bool operator == ( const vec<N,T> & v1, const vec<N,T> & v2 )
 	{
 		for(int i = 0; i < N; i++)
+		{
 			if(v1.v[i] != v2.v[i])
+			{
 				return false;
-			return true;
+			}
+			return true;			
+		}
+
 	}
 	
 	template <int N, class T> inline
@@ -631,9 +639,12 @@ namespace glh
 		for(i=0;i<4;i++)
 		{
 			scp[i] = real(fabs(s[i][0]));
-			for(j=1;j<4;j++)
+			for(j=1;j<4;j++){
 				if(real(fabs(s[i][j])) > scp[i]) scp[i] = real(fabs(s[i][j]));
-				if(scp[i] == 0.0) return minv; // singular matrix!
+				{
+					if(scp[i] == 0.0) {return minv; }// singular matrix!
+				}
+			}
 		}
 		
 		int pivot_to;
@@ -645,6 +656,7 @@ namespace glh
 			scp_max = real(fabs(s[i][i]/scp[i]));
 			// find out which row should be on top
 			for(p=i+1;p<4;p++)
+			{
 				if(real(fabs(s[p][i]/scp[p])) > scp_max)
 				{ scp_max = real(fabs(s[p][i]/scp[p])); pivot_to = p; }
 				// Pivot if necessary
@@ -666,10 +678,11 @@ namespace glh
 					mji = s[j][i]/s[i][i];
 					s[j][i] = 0.0;
 					for(jj=i+1;jj<8;jj++)
-						s[j][jj] -= mji*s[i][jj];
+						{s[j][jj] -= mji*s[i][jj];}
 				}
+			}
 		}
-		if(s[3][3] == 0.0) return minv; // singular matrix!
+		if(s[3][3] == 0.0) {return minv;} // singular matrix!
 		
 		//
 		// Now we have an upper triangular matrix.
@@ -699,10 +712,14 @@ namespace glh
 		}
 		
 		for(i=0;i<4;i++)
+		{
 			for(j=0;j<4;j++)
+			{
 				minv(i,j) = s[i][j+4] / s[i][i];
+			}
 			
 			return minv;
+		}
 	}
     
     
@@ -711,8 +728,12 @@ namespace glh
 		matrix4 mtrans;
 		
 		for(int i=0;i<4;i++)
+		{
 			for(int j=0;j<4;j++)
+			{
 				mtrans(i,j) = element(j,i);		
+			}
+		}
 		return mtrans;
 	}
     
@@ -722,9 +743,15 @@ namespace glh
 		set_value(real(0));
 
 		for(int i=0; i < 4; i++)
+		{
 			for(int j=0; j < 4; j++)
+			{
 				for(int c=0; c < 4; c++)
+				{
 					element(i,j) += mt(i,c) * b(c,j);
+				}
+			}
+		}
 		return *this;
 	}    
 
@@ -734,9 +761,15 @@ namespace glh
 		set_value(real(0));
 
 		for(int i=0; i < 4; i++)
+		{
 			for(int j=0; j < 4; j++)
+			{
 				for(int c=0; c < 4; c++)
+				{
 					element(i,j) += b(i,c) * mt(c,j);
+				}
+			}
+		}
 		return *this;
 	}
 	
diff --git a/ThirdParty/PSCommon/BuildSystem/CommonCppMakefile b/ThirdParty/PSCommon/BuildSystem/CommonCppMakefile
index af28ecc..d375964 100644
--- a/ThirdParty/PSCommon/BuildSystem/CommonCppMakefile
+++ b/ThirdParty/PSCommon/BuildSystem/CommonCppMakefile
@@ -84,18 +84,18 @@ ifneq "$(LIB_NAME)" ""
 	ifneq ("$(OSTYPE)","Darwin")
 		LDFLAGS += -Wl,--no-undefined
 		OUTPUT_NAME = lib$(LIB_NAME).so
-		OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS) -shared
+		OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS) -shared -lpthread
 	else
 		LDFLAGS += -undefined error
 		OUTPUT_NAME = lib$(LIB_NAME).dylib
-		OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS) -dynamiclib -headerpad_max_install_names -install_name $(OUTPUT_NAME)
+		OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS) -dynamiclib -headerpad_max_install_names -install_name -lpthread $(OUTPUT_NAME)
 	endif
 endif
 ifneq "$(EXE_NAME)" ""
 	OUTPUT_NAME = $(EXE_NAME)
 	# We want the executables to look for the .so's locally first:
 	LDFLAGS += -Wl,-rpath ./
-	OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS)
+	OUTPUT_COMMAND = $(CXX) -o $(OUTPUT_FILE) $(OBJ_FILES) $(LDFLAGS) -lpthread
 endif
 ifneq "$(SLIB_NAME)" ""
 	OUTPUT_NAME = lib$(SLIB_NAME).a
@@ -103,7 +103,7 @@ ifneq "$(SLIB_NAME)" ""
 	ifneq ("$(OSTYPE)","Darwin")
 		OUTPUT_COMMAND = $(AR) -cq $(OUTPUT_FILE) $(OBJ_FILES)
 	else
-		OUTPUT_COMMAND = libtool -static -o $(OUTPUT_FILE) $(OBJ_FILES)
+		OUTPUT_COMMAND = libtool -static -o -lpthread $(OUTPUT_FILE) $(OBJ_FILES)
 	endif
 endif
 
diff --git a/ThirdParty/PSCommon/XnLib/Source/Makefile b/ThirdParty/PSCommon/XnLib/Source/Makefile
index 9df62c8..ca00dc5 100644
--- a/ThirdParty/PSCommon/XnLib/Source/Makefile
+++ b/ThirdParty/PSCommon/XnLib/Source/Makefile
@@ -21,5 +21,6 @@ ifneq ("$(OSTYPE)","Darwin")
 	USED_LIBS += rt 
 endif
 CFLAGS += -Wall
+CFLAGS += -lpthread 
 
 include ../../BuildSystem/CommonCppMakefile
